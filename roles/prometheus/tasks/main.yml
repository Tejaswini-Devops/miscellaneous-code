- name: Download Prometheus setup file
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
    dest: /opt
    remote_src: yes

- name: Copy Prometheus service file from template
  ansible.builtin.template:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service

- name: Copy Prometheus config file from template
  ansible.builtin.template:
    src: prometheus.yml
    dest: /opt/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml

- name: Copy alerts config file from template
  ansible.builtin.template:
    src: alerts.yml
    dest: /opt/prometheus-{{ prometheus_version }}.linux-amd64/alerts.yml

- name: Start Prometheus service
  ansible.builtin.systemd:
    name: prometheus
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Wait for Prometheus (port 9090) to be open
  ansible.builtin.wait_for:
    port: 9090
    delay: 10
    timeout: 30

# ---------------- Grafana Setup ----------------

- name: Import Grafana GPG key
  ansible.builtin.rpm_key:
    key: https://rpm.grafana.com/gpg.key
    state: present

- name: Download Grafana RPM
  ansible.builtin.get_url:
    url: https://dl.grafana.com/enterprise/release/grafana-enterprise-{{ grafana_version }}.x86_64.rpm
    dest: /tmp/grafana-enterprise.rpm
    mode: '0644'

- name: Check if Grafana service is already active
  ansible.builtin.systemd:
    name: grafana-server
  register: grafana_status
  ignore_errors: true

- name: Install Grafana from RPM if not active
  ansible.builtin.dnf:
    name: /tmp/grafana-enterprise.rpm
    state: present
  when: grafana_status is failed or (grafana_status.status is defined and grafana_status.status.ActiveState != "active")

- name: Enable and start Grafana service
  ansible.builtin.systemd:
    name: grafana-server
    enabled: true
    state: restarted
    daemon_reload: yes

- name: Copy file
  ansible.builtin.copy:
    src: grafana-expense.json
    dest: /tmp/grafana-expense.json

- name: Import grafana dashboard
  community.grafana.grafana_dashboard:
    grafana_url: http://172.31.35.165:3000
    grafana_api_key: glsa_NMbqoj8yruG3fLORELFIn3gv4mtEcbXP_548e04df
    state: present
    commit_message: Updated by ansible
    overwrite: yes
    path: /tmp/grafana-expense.json

    #jdhs


# ---------------- Alertmanager Setup ----------------

- name: Download Alertmanager setup file
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/alertmanager/releases/download/v{{ alertmanager_version }}/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz
    dest: /opt
    remote_src: yes

- name: Copy Alertmanager service file from template
  ansible.builtin.template:
    src: alertmanager.service
    dest: /etc/systemd/system/alertmanager.service

- name: Copy Alertmanager config file from template
  ansible.builtin.template:
    src: alertmanager.yml
    dest: /opt/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager.yml

- name: Start Alertmanager service
  ansible.builtin.systemd:
    name: alertmanager
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Wait for Alertmanager (port 9093) to be open
  ansible.builtin.wait_for:
    port: 9093
    delay: 10
    timeout: 30