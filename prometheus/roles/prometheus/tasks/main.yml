- name: Download prometheus setup file
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{prometheus_version}}/prometheus-{{prometheus_version}}.linux-amd64.tar.gz
    dest: /opt
    remote_src: yes

- name: copy prometheus service file from template
  ansible.builtin.template:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service

- name: copy prometheus config file from template
  ansible.builtin.template:
    src: prometheus.yml
    dest: /opt/prometheus-{{prometheus_version}}.linux-amd64/prometheus.yml

- name: copy alerts config file from template
  ansible.builtin.template:
    src: alerts.yml
    dest: /opt/prometheus-{{prometheus_version}}.linux-amd64/alerts.yml

- name: Start prometheus service
  ansible.builtin.systemd_service:
    name: prometheus
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Wait for port 9090 to become open on the host, don't start checking for 10 seconds
  ansible.builtin.shell: sleep 5 ; netstat -lntp | grep 9090

- name: Import Grafana GPG key
  ansible.builtin.rpm_key:
    key: https://rpm.grafana.com/gpg.key
    state: present

- name: Download Grafana RPM
  ansible.builtin.get_url:
    url: https://dl.grafana.com/enterprise/release/grafana-enterprise-{{grafana_version}}.x86_64.rpm
    dest: /tmp/grafana-enterprise.rpm
    mode: '0644'

- name: Install Grafana from RPM
  ansible.builtin.dnf:
    name: /tmp/grafana-enterprise.rpm
    state: present

- name: Enable and start Grafana service
  ansible.builtin.systemd:
    name: grafana-server
    enabled: true
    state: started


